///
/// Fiesty (C) 2014 by Jeffery A Esposito
///
/// wrapper of the generated code, includes "generated.cpp" which should be 
/// generated by the "fiesty gen >generated.cpp"
///
#include "fiesty.h"
#include "bitboard.h"
#include "gen.out"

///
/// Generates source code for various bitboards, such as move sets and 
/// magics.
///
void CBitBoard::generate()
{
    genKnightMoveSet();
}

///
/// Generates source code for the knight moves
///
void CBitBoard::genKnightMoveSet()
{
    std::cout << "static const YBitBoard bbKnightMoves[CSqix::kNumSquares] = {";
    for ( U8 sq =  0; sq < CSqix::kNumSquares; sq++ )
    {
        CSqix sqix( sq );
        I8 r = I8( sqix.getRank().get() );
        I8 f = I8( sqix.getFile().get() );
        std::cout << "\n    /* " << sqix.asAbbr() << " */ ";
        CBitBoard bb( 0ULL );
        bb.setIfValid( r + 2, f + 1 );
        bb.setIfValid( r + 2, f - 1 );
        bb.setIfValid( r - 2, f + 1 );
        bb.setIfValid( r - 2, f - 1 );
        bb.setIfValid( r + 1, f + 2 );
        bb.setIfValid( r + 1, f - 2 );
        bb.setIfValid( r - 1, f + 2 );
        bb.setIfValid( r - 1, f - 2 );
        std::cout << bb.asAbbr() << "ULL";
        if( sq != CSqix::kNumSquares - 1 ) 
            std::cout << ",";
    }
    std::cout << " };\n" << std::flush;
}
